/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package hk.org.hkbh.cms.outpatient.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the CodeDto service. Represents a row in the &quot;Op_CodeDto&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link hk.org.hkbh.cms.outpatient.model.impl.CodeDtoModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link hk.org.hkbh.cms.outpatient.model.impl.CodeDtoImpl}.
 * </p>
 *
 * @author Dave Man
 * @see CodeDto
 * @see hk.org.hkbh.cms.outpatient.model.impl.CodeDtoImpl
 * @see hk.org.hkbh.cms.outpatient.model.impl.CodeDtoModelImpl
 * @generated
 */
@ProviderType
public interface CodeDtoModel extends BaseModel<CodeDto> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a code dto model instance should use the {@link CodeDto} interface instead.
	 */

	/**
	 * Returns the primary key of this code dto.
	 *
	 * @return the primary key of this code dto
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this code dto.
	 *
	 * @param primaryKey the primary key of this code dto
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this code dto.
	 *
	 * @return the ID of this code dto
	 */
	public long getId();

	/**
	 * Sets the ID of this code dto.
	 *
	 * @param id the ID of this code dto
	 */
	public void setId(long id);

	/**
	 * Returns the master code of this code dto.
	 *
	 * @return the master code of this code dto
	 */
	@AutoEscape
	public String getMasterCode();

	/**
	 * Sets the master code of this code dto.
	 *
	 * @param masterCode the master code of this code dto
	 */
	public void setMasterCode(String masterCode);

	/**
	 * Returns the code display text en of this code dto.
	 *
	 * @return the code display text en of this code dto
	 */
	@AutoEscape
	public String getCodeDisplayTextEn();

	/**
	 * Sets the code display text en of this code dto.
	 *
	 * @param codeDisplayTextEn the code display text en of this code dto
	 */
	public void setCodeDisplayTextEn(String codeDisplayTextEn);

	/**
	 * Returns the code display text chi of this code dto.
	 *
	 * @return the code display text chi of this code dto
	 */
	@AutoEscape
	public String getCodeDisplayTextChi();

	/**
	 * Sets the code display text chi of this code dto.
	 *
	 * @param codeDisplayTextChi the code display text chi of this code dto
	 */
	public void setCodeDisplayTextChi(String codeDisplayTextChi);

	/**
	 * Returns the code active of this code dto.
	 *
	 * @return the code active of this code dto
	 */
	public Boolean getCodeActive();

	/**
	 * Sets the code active of this code dto.
	 *
	 * @param codeActive the code active of this code dto
	 */
	public void setCodeActive(Boolean codeActive);

	/**
	 * Returns the subcode enabled of this code dto.
	 *
	 * @return the subcode enabled of this code dto
	 */
	public Boolean getSubcodeEnabled();

	/**
	 * Sets the subcode enabled of this code dto.
	 *
	 * @param subcodeEnabled the subcode enabled of this code dto
	 */
	public void setSubcodeEnabled(Boolean subcodeEnabled);

	/**
	 * Returns the code remarks of this code dto.
	 *
	 * @return the code remarks of this code dto
	 */
	@AutoEscape
	public String getCodeRemarks();

	/**
	 * Sets the code remarks of this code dto.
	 *
	 * @param codeRemarks the code remarks of this code dto
	 */
	public void setCodeRemarks(String codeRemarks);

	/**
	 * Returns the detail code of this code dto.
	 *
	 * @return the detail code of this code dto
	 */
	@AutoEscape
	public String getDetailCode();

	/**
	 * Sets the detail code of this code dto.
	 *
	 * @param detailCode the detail code of this code dto
	 */
	public void setDetailCode(String detailCode);

	/**
	 * Returns the seq of this code dto.
	 *
	 * @return the seq of this code dto
	 */
	public Integer getSeq();

	/**
	 * Sets the seq of this code dto.
	 *
	 * @param seq the seq of this code dto
	 */
	public void setSeq(Integer seq);

	/**
	 * Returns the code detail display text en of this code dto.
	 *
	 * @return the code detail display text en of this code dto
	 */
	@AutoEscape
	public String getCodeDetailDisplayTextEn();

	/**
	 * Sets the code detail display text en of this code dto.
	 *
	 * @param codeDetailDisplayTextEn the code detail display text en of this code dto
	 */
	public void setCodeDetailDisplayTextEn(String codeDetailDisplayTextEn);

	/**
	 * Returns the code detail display text chi of this code dto.
	 *
	 * @return the code detail display text chi of this code dto
	 */
	@AutoEscape
	public String getCodeDetailDisplayTextChi();

	/**
	 * Sets the code detail display text chi of this code dto.
	 *
	 * @param codeDetailDisplayTextChi the code detail display text chi of this code dto
	 */
	public void setCodeDetailDisplayTextChi(String codeDetailDisplayTextChi);

	/**
	 * Returns the code detail active of this code dto.
	 *
	 * @return the code detail active of this code dto
	 */
	public Boolean getCodeDetailActive();

	/**
	 * Sets the code detail active of this code dto.
	 *
	 * @param codeDetailActive the code detail active of this code dto
	 */
	public void setCodeDetailActive(Boolean codeDetailActive);

	/**
	 * Returns the level of this code dto.
	 *
	 * @return the level of this code dto
	 */
	public Integer getLevel();

	/**
	 * Sets the level of this code dto.
	 *
	 * @param level the level of this code dto
	 */
	public void setLevel(Integer level);

	/**
	 * Returns the up level ID of this code dto.
	 *
	 * @return the up level ID of this code dto
	 */
	public Long getUpLevelId();

	/**
	 * Sets the up level ID of this code dto.
	 *
	 * @param upLevelId the up level ID of this code dto
	 */
	public void setUpLevelId(Long upLevelId);

	/**
	 * Returns the code detail remarks of this code dto.
	 *
	 * @return the code detail remarks of this code dto
	 */
	@AutoEscape
	public String getCodeDetailRemarks();

	/**
	 * Sets the code detail remarks of this code dto.
	 *
	 * @param codeDetailRemarks the code detail remarks of this code dto
	 */
	public void setCodeDetailRemarks(String codeDetailRemarks);

	/**
	 * Returns the create date of this code dto.
	 *
	 * @return the create date of this code dto
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this code dto.
	 *
	 * @param createDate the create date of this code dto
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the update date of this code dto.
	 *
	 * @return the update date of this code dto
	 */
	public Date getUpdateDate();

	/**
	 * Sets the update date of this code dto.
	 *
	 * @param updateDate the update date of this code dto
	 */
	public void setUpdateDate(Date updateDate);

	/**
	 * Returns the created by of this code dto.
	 *
	 * @return the created by of this code dto
	 */
	@AutoEscape
	public String getCreatedBy();

	/**
	 * Sets the created by of this code dto.
	 *
	 * @param createdBy the created by of this code dto
	 */
	public void setCreatedBy(String createdBy);

	/**
	 * Returns the updated by of this code dto.
	 *
	 * @return the updated by of this code dto
	 */
	@AutoEscape
	public String getUpdatedBy();

	/**
	 * Sets the updated by of this code dto.
	 *
	 * @param updatedBy the updated by of this code dto
	 */
	public void setUpdatedBy(String updatedBy);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(CodeDto codeDto);

	@Override
	public int hashCode();

	@Override
	public CacheModel<CodeDto> toCacheModel();

	@Override
	public CodeDto toEscapedModel();

	@Override
	public CodeDto toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}